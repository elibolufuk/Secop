// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Secop.Approval.Persistence.DbContexts;
using Secop.Core.Domain.Enums;

#nullable disable

namespace Secop.Approval.Persistence.Migrations
{
    [DbContext(typeof(ApprovalDbContext))]
    partial class ApprovalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("approval")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "approval", "application_status_type", new[] { "application_received", "approved", "rejected" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "approval", "credit_risk_level_type", new[] { "none", "very_high_risk", "high_risk", "medium_risk", "good", "excellent" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "approval", "entity_status_type", new[] { "active", "passive", "deleted" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Secop.Core.Domain.Entities.ApprovalEntities.LoanApproval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount")
                        .HasColumnOrder(8);

                    b.Property<ApplicationStatusType>("ApplicationStatus")
                        .HasColumnType("approval.application_status_type")
                        .HasColumnName("application_status")
                        .HasColumnOrder(12);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("comment")
                        .HasColumnOrder(13);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by_id")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CreditApplicationId")
                        .HasColumnType("uuid")
                        .HasColumnName("credit_application_id")
                        .HasColumnOrder(7);

                    b.Property<EntityStatusType>("EntityStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("approval.entity_status_type")
                        .HasDefaultValue(EntityStatusType.Active)
                        .HasColumnName("entity_status")
                        .HasColumnOrder(6);

                    b.Property<CreditRiskLevelType>("RiskLevel")
                        .HasColumnType("approval.credit_risk_level_type")
                        .HasColumnName("risk_level")
                        .HasColumnOrder(11);

                    b.Property<int>("Score")
                        .HasColumnType("integer")
                        .HasColumnName("score")
                        .HasColumnOrder(10);

                    b.Property<int>("TermMonths")
                        .HasColumnType("integer")
                        .HasColumnName("term_months")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(5);

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by_id")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("loan_approval", "approval");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3d6f3a0-3a29-45f8-b4d9-bbb5b4385b9e"),
                            Amount = 20000.50m,
                            ApplicationStatus = ApplicationStatusType.Approved,
                            Comment = "İyi kredi notuyla onaylandı",
                            CreatedAt = new DateTime(2024, 8, 25, 14, 32, 0, 0, DateTimeKind.Utc),
                            CreatedById = new Guid("a3b72e9d-b27c-41a7-99d9-e2f9327c446d"),
                            CreditApplicationId = new Guid("b6e7d8c9-d2c7-4f0e-a3fc-76fa0d579123"),
                            EntityStatus = EntityStatusType.Active,
                            RiskLevel = CreditRiskLevelType.HighRisk,
                            Score = 1600,
                            TermMonths = 24
                        },
                        new
                        {
                            Id = new Guid("8fa83e6f-9b17-42e9-9a69-5f9b7b3e7d31"),
                            Amount = 35000.00m,
                            ApplicationStatus = ApplicationStatusType.Rejected,
                            Comment = "Orta düzeyde risk nedeniyle inceleme bekleniyor",
                            CreatedAt = new DateTime(2024, 8, 25, 10, 15, 0, 0, DateTimeKind.Utc),
                            CreatedById = new Guid("c93b2f1a-a9a6-4d3a-a356-579c03e3b7a9"),
                            CreditApplicationId = new Guid("12b4556d-8c2d-42f1-a125-e1d13a3d7c4b"),
                            EntityStatus = EntityStatusType.Passive,
                            RiskLevel = CreditRiskLevelType.MediumRisk,
                            Score = 1200,
                            TermMonths = 12,
                            UpdatedAt = new DateTime(2024, 8, 26, 9, 20, 0, 0, DateTimeKind.Utc),
                            UpdatedById = new Guid("d52e0297-d9cc-46c2-b3d2-cf5b5b9b11bc")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
